#define r8 0
#define r7 1
#define r6 2
#define r5 3
#define r4 4
#define r3 5
#define r2 6
#define r1 7

#define c1 8
#define c2 9
#define c3 10
#define c4 11
#define c5 12
#define c6 13
#define c7 19
#define c8 18

#define initr HIGH
#define initc LOW
int analoginit= 0;

#define pause 100
#define screenTime 50

int vRows[8]={r1,r2,r3,r4,r5,r6,r7,r8};
int vCols[8]={c1,c2,c3,c4,c5,c6,c7,c8};

byte A[8][8] = {{0,0,0,1,1,0,0,0},{0,0,1,0,0,1,0,0},{0,0,1,0,0,1,0,0},{0,0,1,1,1,1,0,0},{0,0,1,0,0,1,0,0},{0,0,1,0,0,1,0,0},{0,0,1,0,0,1,0,0},{0,0,1,0,0,1,0,0}};
byte B[8][8] = {{0,0,1,1,1,0,0,0},{0,0,1,0,0,1,0,0},{0,0,1,0,0,1,0,0},{0,0,1,1,1,0,0,0},{0,0,1,0,0,1,0,0},{0,0,1,0,0,1,0,0},{0,0,1,0,0,1,0,0},{0,0,1,1,1,0,0,0}};
byte C[8][8] = {{0,0,0,0,0,0,0,0},{0,0,0,1,1,1,1,0},{0,0,1,0,0,0,0,0},{0,1,0,0,0,0,0,0},{0,1,0,0,0,0,0,0},{0,0,1,0,0,0,0,0},{0,0,0,1,1,1,1,0},{0,0,0,0,0,0,0,0}};
byte D[8][8] = {{0,0,0,0,0,0,0,0},{0,0,1,1,1,0,0,0},{0,0,1,0,0,1,0,0},{0,0,1,0,0,0,1,0},{0,0,1,0,0,0,1,0},{0,0,1,0,0,1,0,0},{0,0,1,1,1,0,0,0},{0,0,0,0,0,0,0,0}};
byte E[8][8] = {{0,0,0,0,0,0,0,0},{0,0,1,1,1,1,0,0},{0,0,1,0,0,0,0,0},{0,0,1,1,1,0,0,0},{0,0,1,0,0,0,0,0},{0,0,1,0,0,0,0,0},{0,0,1,1,1,1,0,0},{0,0,0,0,0,0,0,0}};
byte F[8][8] = {{0,0,0,0,0,0,0,0},{0,0,1,1,1,1,0,0},{0,0,1,0,0,0,0,0},{0,0,1,1,1,0,0,0},{0,0,1,0,0,0,0,0},{0,0,1,0,0,0,0,0},{0,0,1,0,0,0,0,0},{0,0,0,0,0,0,0,0}};
byte G[8][8] = {{0,0,0,0,0,0,0,0},{0,0,1,1,1,1,1,0},{0,0,1,0,0,0,0,0},{0,0,1,0,0,0,0,0},{0,0,1,0,1,1,1,0},{0,0,1,0,0,0,1,0},{0,0,1,1,1,1,1,0},{0,0,0,0,0,0,0,0}};
byte H[8][8] = {{0,0,0,0,0,0,0,0},{0,0,1,0,0,1,0,0},{0,0,1,0,0,1,0,0},{0,0,1,1,1,1,0,0},{0,0,1,0,0,1,0,0},{0,0,1,0,0,1,0,0},{0,0,1,0,0,1,0,0},{0,0,0,0,0,0,0,0}};
byte I[8][8] = {{0,0,0,0,0,0,0,0},{0,0,1,1,1,0,0,0},{0,0,0,1,0,0,0,0},{0,0,0,1,0,0,0,0},{0,0,0,1,0,0,0,0},{0,0,0,1,0,0,0,0},{0,0,1,1,1,0,0,0},{0,0,0,0,0,0,0,0}};
byte J[8][8] = {{0,0,0,0,0,0,0,0},{0,0,0,1,1,1,0,0},{0,0,0,0,1,0,0,0},{0,0,0,0,1,0,0,0},{0,0,0,0,1,0,0,0},{0,0,1,0,1,0,0,0},{0,0,1,1,1,0,0,0},{0,0,0,0,0,0,0,0}};
byte K[8][8] = {{0,0,0,0,0,0,0,0},{0,0,1,0,0,1,0,0},{0,0,1,0,1,0,0,0},{0,0,1,1,0,0,0,0},{0,0,1,0,1,0,0,0},{0,0,1,0,0,1,0,0},{0,0,1,0,0,1,0,0},{0,0,0,0,0,0,0,0}};
byte L[8][8] = {{0,0,0,0,0,0,0,0},{0,0,1,0,0,0,0,0},{0,0,1,0,0,0,0,0},{0,0,1,0,0,0,0,0},{0,0,1,0,0,0,0,0},{0,0,1,0,0,0,0,0},{0,0,1,1,1,1,0,0},{0,0,0,0,0,0,0,0}};
byte M[8][8] = {{0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0},{0,1,0,0,0,1,0,0},{1,0,1,0,1,0,1,0},{1,0,0,1,0,0,1,0},{1,0,0,0,0,0,1,0},{1,0,0,0,0,0,1,0},{0,0,0,0,0,0,0,0}};
byte N[8][8] = {{0,0,0,0,0,0,0,0},{0,0,1,0,0,0,1,0},{0,0,1,1,0,0,1,0},{0,0,1,0,1,0,1,0},{0,0,1,0,0,1,1,0},{0,0,1,0,0,0,1,0},{0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0}};
byte O[8][8] = {{0,0,0,0,0,0,0,0},{0,0,1,1,1,1,0,0},{0,1,0,0,0,0,1,0},{0,1,0,0,0,0,1,0},{0,1,0,0,0,0,1,0},{0,1,0,0,0,0,1,0},{0,0,1,1,1,1,0,0},{0,0,0,0,0,0,0,0}};
byte P[8][8] = {{0,0,0,0,0,0,0,0},{0,0,1,1,1,0,0,0},{0,0,1,0,0,1,0,0},{0,0,1,0,0,1,0,0},{0,0,1,1,1,0,0,0},{0,0,1,0,0,0,0,0},{0,0,1,0,0,0,0,0},{0,0,0,0,0,0,0,0}};
byte Q[8][8] = {{0,0,0,0,0,0,0,0},{0,0,1,1,1,1,0,0},{0,1,0,0,0,0,1,0},{0,1,0,0,0,0,1,0},{0,1,0,0,0,0,1,0},{0,1,0,0,0,1,1,0},{0,0,1,1,1,1,1,0},{0,0,0,0,0,0,0,1}};
byte R[8][8] = {{0,0,0,0,0,0,0,0},{0,0,1,1,1,0,0,0},{0,0,1,0,0,1,0,0},{0,0,1,0,0,1,0,0},{0,0,1,1,1,0,0,0},{0,0,1,0,0,1,0,0},{0,0,1,0,0,1,0,0},{0,0,0,0,0,0,0,0}};
byte S[8][8] = {{0,0,0,0,0,0,0,0},{0,0,1,1,1,1,0,0},{0,0,1,0,0,0,0,0},{0,0,1,1,1,1,0,0},{0,0,0,0,0,1,0,0},{0,0,0,0,0,1,0,0},{0,0,1,1,1,1,0,0},{0,0,0,0,0,0,0,0}};
byte T[8][8] = {{0,0,0,0,0,0,0,0},{0,1,1,1,1,1,0,0},{0,0,0,1,0,0,0,0},{0,0,0,1,0,0,0,0},{0,0,0,1,0,0,0,0},{0,0,0,1,0,0,0,0},{0,0,0,1,0,0,0,0},{0,0,0,0,0,0,0,0}};
byte U[8][8] = {{0,0,0,0,0,0,0,0},{0,1,0,0,0,0,1,0},{0,1,0,0,0,0,1,0},{0,1,0,0,0,0,1,0},{0,1,0,0,0,0,1,0},{0,0,1,0,0,1,0,0},{0,0,0,1,1,0,0,0},{0,0,0,0,0,0,0,0}};
byte V[8][8] = {{0,0,0,0,0,0,0,0},{0,0,1,0,0,0,1,0},{0,0,1,0,0,0,1,0},{0,0,1,0,0,0,1,0},{0,0,0,1,0,1,0,0},{0,0,0,1,0,1,0,0},{0,0,0,0,1,0,0,0},{0,0,0,0,0,0,0,0}};
byte W[8][8] = {{0,0,0,0,0,0,0,0},{1,0,0,0,0,0,1,0},{1,0,0,1,0,0,1,0},{0,1,0,1,0,1,0,0},{0,1,0,1,0,1,0,0},{0,0,1,0,1,0,0,0},{0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0}};
byte X[8][8] = {{0,0,0,0,0,0,0,0},{0,1,0,0,0,0,1,0},{0,0,1,0,0,1,0,0},{0,0,0,1,1,0,0,0},{0,0,0,1,1,0,0,0},{0,0,1,0,0,1,0,0},{0,1,0,0,0,0,1,0},{0,0,0,0,0,0,0,0}};
byte Y[8][8] = {{0,1,0,0,0,0,1,0},{0,1,0,0,0,0,1,0},{0,0,1,0,0,1,0,0},{0,0,1,0,0,1,0,0},{0,0,0,1,1,0,0,0},{0,0,0,1,1,0,0,0},{0,0,0,1,1,0,0,0},{0,0,0,1,1,0,0,0}};
byte Z[8][8] = {{0,1,1,1,1,1,1,0},{0,0,0,0,0,0,1,0},{0,0,0,0,0,1,0,0},{0,0,0,0,1,0,0,0},{0,0,0,1,0,0,0,0},{0,0,1,0,0,0,0,0},{0,1,0,0,0,0,0,0},{0,1,1,1,1,1,1,0}};
byte space[8][8]= {{0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0}};
byte escl[8][8]= {{0,0,0,0,0,0,0,0},{0,0,0,1,0,0,0,0},{0,0,0,1,0,0,0,0},{0,0,0,1,0,0,0,0},{0,0,0,1,0,0,0,0},{0,0,0,0,0,0,0,0},{0,0,0,1,0,0,0,0},{0,0,0,0,0,0,0,0}};


void resetRows(){
  for(int i=0;i<8;i++)
  digitalWrite(vRows[i],initr);
}
  void resetCols(){
    for(int i=0;i<8;i++)
  digitalWrite(vCols[i],initc);
}

void setup() {

  pinMode(r1,OUTPUT);
  pinMode(r2,OUTPUT);
  pinMode(r3,OUTPUT);
  pinMode(r4,OUTPUT);
  pinMode(r5,OUTPUT);
  pinMode(r6,OUTPUT);
  pinMode(r7,OUTPUT);
  pinMode(r8,OUTPUT);
 
  pinMode(c1,OUTPUT);
  pinMode(c2,OUTPUT);
  pinMode(c3,OUTPUT);
  pinMode(c4,OUTPUT);
  pinMode(c5,OUTPUT);
  pinMode(c6,OUTPUT);
  pinMode(c7,OUTPUT);
  pinMode(c8,OUTPUT);

  resetRows();
  resetCols();

}



void lightRows(){
  for(int i=0;i<8;i++)
  digitalWrite(vRows[i],!initr);
}


void lightCols(){
  for(int i=0;i<8;i++)
  digitalWrite(vCols[i],!initc);
}

void counter1(){
    for(int i=0;i<8;i++){
      resetCols();
      resetRows();
      digitalWrite(vCols[i],HIGH);
      delay(pause);
        for(int j=0;j<8;j++){
          resetRows();
          digitalWrite(vRows[j],LOW);
          delay(pause);
        }
    }

}

void counter2(){

  for(int i=0;i<8;i++){
    resetCols();
    resetRows();
    digitalWrite(vRows[i],LOW);
    delay(pause);
    for(int j=0;j<8;j++){
    resetCols();
      digitalWrite(vCols[j],HIGH);
    delay(pause);
  }
    }
}

void blinking(){

  for(int i=0;i<3;i++){
  lightCols();
  lightRows();
  delay(pause*10);
  resetRows();
  resetCols();
  delay(pause*10);
  }
}

void drawSymbols(byte m[8][8]){
  for(int k=0;k<screenTime;k++){
   for(int i=0;i<8;i++){
  digitalWrite(vCols[i],!initc);
    for(int j=0;j<8;j++)
    digitalWrite(vRows[j],!m[i][j]);
    delay(2);
    resetRows();
    resetCols();

 }
  }
}

void writeLetter(String wordIn){
  for(int i=0;wordIn[i]!=0;i++){
   switch(wordIn[i]){
    case 'A':drawSymbols(A);
            break;
    case 'B':drawSymbols(B);
            break;
    case 'C':drawSymbols(C);
            break;
    case 'D':drawSymbols(D);
            break;
    case 'E':drawSymbols(E);
            break;
    case 'F':drawSymbols(F);
            break;
    case 'G':drawSymbols(G);
            break;
    case 'H':drawSymbols(H);
            break;
    case 'I':drawSymbols(I);
            break;
    case 'J':drawSymbols(J);
            break;
    case 'K':drawSymbols(K);
            break;
    case 'L':drawSymbols(L);
            break;
    case 'M':drawSymbols(M);
            break;
    case 'N':drawSymbols(N);
            break;
    case 'O':drawSymbols(O);
            break;
    case 'P':drawSymbols(P);
            break;
    case 'Q':drawSymbols(Q);
            break;
    case 'R':drawSymbols(R);
            break;
    case 'S':drawSymbols(S);
            break;
    case 'T':drawSymbols(T);
            break;
    case 'U':drawSymbols(U);
            break;
    case 'V':drawSymbols(V);
            break;
    case 'W':drawSymbols(W);
            break;
    case 'X':drawSymbols(X);
            break;
    case 'Y':drawSymbols(Y);
            break;
    case 'Z':drawSymbols(Z);
            break;
    case '!':drawSymbols(escl);
    break;
    default:drawSymbols(space);
            break;        
   }
    }
  }


void loop() {
    counter1();
    counter2();
    blinking();
    String a="HELLO WORLD!";
    writeLetter(a);
}
